name: Build and Release

on:
  push:
    tags:
      - 'v*' # 触发条件：推送以 'v' 开头的标签
  workflow_dispatch: # 允许手动触发工作流程

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build for Chrome
        run: pnpm run build

      - name: Zip Chrome extension
        run: pnpm run zip

      - name: Build for Firefox
        run: pnpm run build:firefox

      - name: Zip Firefox extension
        run: pnpm run zip:firefox

      - name: Find ZIP files
        id: find_zips
        run: |
          chrome_zip=$(ls .output/*-chrome.zip)
          firefox_zip=$(ls .output/*-firefox.zip)
          echo "chrome_zip=$chrome_zip" >> $GITHUB_OUTPUT
          echo "firefox_zip=$firefox_zip" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Chrome Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_zips.outputs.chrome_zip }}
          asset_name: smart-preview-chrome.zip
          asset_content_type: application/zip

      - name: Upload Firefox Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_zips.outputs.firefox_zip }}
          asset_name: smart-preview-firefox.zip
          asset_content_type: application/zip
